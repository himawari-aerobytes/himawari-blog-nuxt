events {
    worker_connections  16;
}
http {
    server {
        listen 443 ssl;
        server_name localhost;
	ssl_certificate     /etc/letsencrypt/live/blog.himawari.engineerseed.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/blog.himawari.engineerseed.com/privkey.pem;
        location /cms/ {
            proxy_pass http://host.docker.internal:8000/cms/;
            proxy_redirect off;
	    proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-Proto  https;
        }

	location /blog/contact {
            proxy_pass https://wdruieg1nl.execute-api.ap-northeast-1.amazonaws.com/himawari-blog-contact-form;
	}

	    location /app/ {
	     proxy_pass http://host.docker.internal:3000/app/; 
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Host $host;
             proxy_set_header X-Forwarded-Server $host;
             proxy_set_header X-Forwarded-Proto https;

             # Optional: Set a custom header to indicate this is a "proxy" request
             add_header X-Proxy-Request "true";
        }

    	location = / {
            rewrite ^ http://$host/app/ permanent;
    	}

	location /app/_nuxt/ {
	    proxy_pass http://host.docker.internal:3000/app/_nuxt/;
            proxy_redirect off;
            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-Proto  https;
	
	}

	 proxy_redirect off;
	 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $host;
        
        error_page 404 /404.html;
        location = /404.html {
          root /usr/share/nginx/html;
        }
	    
    }
    server {
       listen 80;
       server_name localhost;
       return 301 https://$host$request_uri;
    }

}